// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: searchimages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nadeko.Microservices {

  /// <summary>Holder for reflection information generated from searchimages.proto</summary>
  public static partial class SearchimagesReflection {

    #region Descriptor
    /// <summary>File descriptor for searchimages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SearchimagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJzZWFyY2hpbWFnZXMucHJvdG8SFG5hZGVrby5taWNyb3NlcnZpY2VzIg4K",
            "DEJvb2JzUmVxdWVzdCIOCgxCdXR0c1JlcXVlc3QiVgoIVXJsUmVwbHkSCwoD",
            "dXJsGAEgASgJEg0KBWVycm9yGAIgASgJEgwKBHRhZ3MYAyADKAkSEAoIcHJv",
            "dmlkZXIYBCABKAkSDgoGcmF0aW5nGAUgASgJIkIKClRhZ1JlcXVlc3QSDAoE",
            "dGFncxgBIAMoCRIVCg1mb3JjZUV4cGxpY2l0GAIgASgIEg8KB2d1aWxkSWQY",
            "AyABKAQiMwoTQmxhY2tsaXN0VGFnTWVzc2FnZRILCgN0YWcYASABKAkSDwoH",
            "Z3VpbGRJZBgCIAEoBCIkChFCbGFja2xpc3RUYWdSZXBseRIPCgdpc0FkZGVk",
            "GAEgASgIIiwKGUdldEJsYWNrbGlzdGVkVGFnc01lc3NhZ2USDwoHZ3VpbGRJ",
            "ZBgBIAEoBCIyChdHZXRCbGFja2xpc3RlZFRhZ3NSZXBseRIXCg9ibGFja2xp",
            "c3RlZFRhZ3MYASADKAkiEwoRQ2xlYXJDYWNoZVJlcXVlc3QiEQoPQ2xlYXJD",
            "YWNoZVJlcGx5MroJCgxTZWFyY2hJbWFnZXMSTQoFQm9vYnMSIi5uYWRla28u",
            "bWljcm9zZXJ2aWNlcy5Cb29ic1JlcXVlc3QaHi5uYWRla28ubWljcm9zZXJ2",
            "aWNlcy5VcmxSZXBseSIAEk0KBUJ1dHRzEiIubmFkZWtvLm1pY3Jvc2Vydmlj",
            "ZXMuQnV0dHNSZXF1ZXN0Gh4ubmFkZWtvLm1pY3Jvc2VydmljZXMuVXJsUmVw",
            "bHkiABJOCghEYW5ib29ydRIgLm5hZGVrby5taWNyb3NlcnZpY2VzLlRhZ1Jl",
            "cXVlc3QaHi5uYWRla28ubWljcm9zZXJ2aWNlcy5VcmxSZXBseSIAEkwKBlJ1",
            "bGUzNBIgLm5hZGVrby5taWNyb3NlcnZpY2VzLlRhZ1JlcXVlc3QaHi5uYWRl",
            "a28ubWljcm9zZXJ2aWNlcy5VcmxSZXBseSIAEk0KB1lhbmRlcmUSIC5uYWRl",
            "a28ubWljcm9zZXJ2aWNlcy5UYWdSZXF1ZXN0Gh4ubmFkZWtvLm1pY3Jvc2Vy",
            "dmljZXMuVXJsUmVwbHkiABJOCghHZWxib29ydRIgLm5hZGVrby5taWNyb3Nl",
            "cnZpY2VzLlRhZ1JlcXVlc3QaHi5uYWRla28ubWljcm9zZXJ2aWNlcy5VcmxS",
            "ZXBseSIAEkwKBkhlbnRhaRIgLm5hZGVrby5taWNyb3NlcnZpY2VzLlRhZ1Jl",
            "cXVlc3QaHi5uYWRla28ubWljcm9zZXJ2aWNlcy5VcmxSZXBseSIAEk8KCVNh",
            "ZmVCb29ydRIgLm5hZGVrby5taWNyb3NlcnZpY2VzLlRhZ1JlcXVlc3QaHi5u",
            "YWRla28ubWljcm9zZXJ2aWNlcy5VcmxSZXBseSIAEk4KCEtvbmFjaGFuEiAu",
            "bmFkZWtvLm1pY3Jvc2VydmljZXMuVGFnUmVxdWVzdBoeLm5hZGVrby5taWNy",
            "b3NlcnZpY2VzLlVybFJlcGx5IgASUAoKRGVycGlCb29ydRIgLm5hZGVrby5t",
            "aWNyb3NlcnZpY2VzLlRhZ1JlcXVlc3QaHi5uYWRla28ubWljcm9zZXJ2aWNl",
            "cy5VcmxSZXBseSIAEkoKBEU2MjESIC5uYWRla28ubWljcm9zZXJ2aWNlcy5U",
            "YWdSZXF1ZXN0Gh4ubmFkZWtvLm1pY3Jvc2VydmljZXMuVXJsUmVwbHkiABJq",
            "ChJUb2dnbGVCbGFja2xpc3RUYWcSKS5uYWRla28ubWljcm9zZXJ2aWNlcy5C",
            "bGFja2xpc3RUYWdNZXNzYWdlGicubmFkZWtvLm1pY3Jvc2VydmljZXMuQmxh",
            "Y2tsaXN0VGFnUmVwbHkiABJ2ChJHZXRCbGFja2xzaXRlZFRhZ3MSLy5uYWRl",
            "a28ubWljcm9zZXJ2aWNlcy5HZXRCbGFja2xpc3RlZFRhZ3NNZXNzYWdlGi0u",
            "bmFkZWtvLm1pY3Jvc2VydmljZXMuR2V0QmxhY2tsaXN0ZWRUYWdzUmVwbHki",
            "ABJeCgpDbGVhckNhY2hlEicubmFkZWtvLm1pY3Jvc2VydmljZXMuQ2xlYXJD",
            "YWNoZVJlcXVlc3QaJS5uYWRla28ubWljcm9zZXJ2aWNlcy5DbGVhckNhY2hl",
            "UmVwbHkiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.BoobsRequest), global::Nadeko.Microservices.BoobsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.ButtsRequest), global::Nadeko.Microservices.ButtsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.UrlReply), global::Nadeko.Microservices.UrlReply.Parser, new[]{ "Url", "Error", "Tags", "Provider", "Rating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.TagRequest), global::Nadeko.Microservices.TagRequest.Parser, new[]{ "Tags", "ForceExplicit", "GuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.BlacklistTagMessage), global::Nadeko.Microservices.BlacklistTagMessage.Parser, new[]{ "Tag", "GuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.BlacklistTagReply), global::Nadeko.Microservices.BlacklistTagReply.Parser, new[]{ "IsAdded" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.GetBlacklistedTagsMessage), global::Nadeko.Microservices.GetBlacklistedTagsMessage.Parser, new[]{ "GuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.GetBlacklistedTagsReply), global::Nadeko.Microservices.GetBlacklistedTagsReply.Parser, new[]{ "BlacklistedTags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.ClearCacheRequest), global::Nadeko.Microservices.ClearCacheRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nadeko.Microservices.ClearCacheReply), global::Nadeko.Microservices.ClearCacheReply.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BoobsRequest : pb::IMessage<BoobsRequest> {
    private static readonly pb::MessageParser<BoobsRequest> _parser = new pb::MessageParser<BoobsRequest>(() => new BoobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoobsRequest(BoobsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoobsRequest Clone() {
      return new BoobsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoobsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ButtsRequest : pb::IMessage<ButtsRequest> {
    private static readonly pb::MessageParser<ButtsRequest> _parser = new pb::MessageParser<ButtsRequest>(() => new ButtsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ButtsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ButtsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ButtsRequest(ButtsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ButtsRequest Clone() {
      return new ButtsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ButtsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ButtsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ButtsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UrlReply : pb::IMessage<UrlReply> {
    private static readonly pb::MessageParser<UrlReply> _parser = new pb::MessageParser<UrlReply>(() => new UrlReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UrlReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlReply(UrlReply other) : this() {
      url_ = other.url_;
      error_ = other.error_;
      tags_ = other.tags_.Clone();
      provider_ = other.provider_;
      rating_ = other.rating_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlReply Clone() {
      return new UrlReply(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 4;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rating" field.</summary>
    public const int RatingFieldNumber = 5;
    private string rating_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rating {
      get { return rating_; }
      set {
        rating_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UrlReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UrlReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Error != other.Error) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (Provider != other.Provider) return false;
      if (Rating != other.Rating) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (Rating.Length != 0) hash ^= Rating.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (Provider.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Provider);
      }
      if (Rating.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Rating);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (Rating.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rating);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UrlReply other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      tags_.Add(other.tags_);
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.Rating.Length != 0) {
        Rating = other.Rating;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 34: {
            Provider = input.ReadString();
            break;
          }
          case 42: {
            Rating = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TagRequest : pb::IMessage<TagRequest> {
    private static readonly pb::MessageParser<TagRequest> _parser = new pb::MessageParser<TagRequest>(() => new TagRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagRequest(TagRequest other) : this() {
      tags_ = other.tags_.Clone();
      forceExplicit_ = other.forceExplicit_;
      guildId_ = other.guildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagRequest Clone() {
      return new TagRequest(this);
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "forceExplicit" field.</summary>
    public const int ForceExplicitFieldNumber = 2;
    private bool forceExplicit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ForceExplicit {
      get { return forceExplicit_; }
      set {
        forceExplicit_ = value;
      }
    }

    /// <summary>Field number for the "guildId" field.</summary>
    public const int GuildIdFieldNumber = 3;
    private ulong guildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tags_.Equals(other.tags_)) return false;
      if (ForceExplicit != other.ForceExplicit) return false;
      if (GuildId != other.GuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tags_.GetHashCode();
      if (ForceExplicit != false) hash ^= ForceExplicit.GetHashCode();
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tags_.WriteTo(output, _repeated_tags_codec);
      if (ForceExplicit != false) {
        output.WriteRawTag(16);
        output.WriteBool(ForceExplicit);
      }
      if (GuildId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(GuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (ForceExplicit != false) {
        size += 1 + 1;
      }
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagRequest other) {
      if (other == null) {
        return;
      }
      tags_.Add(other.tags_);
      if (other.ForceExplicit != false) {
        ForceExplicit = other.ForceExplicit;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 16: {
            ForceExplicit = input.ReadBool();
            break;
          }
          case 24: {
            GuildId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlacklistTagMessage : pb::IMessage<BlacklistTagMessage> {
    private static readonly pb::MessageParser<BlacklistTagMessage> _parser = new pb::MessageParser<BlacklistTagMessage>(() => new BlacklistTagMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlacklistTagMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlacklistTagMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlacklistTagMessage(BlacklistTagMessage other) : this() {
      tag_ = other.tag_;
      guildId_ = other.guildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlacklistTagMessage Clone() {
      return new BlacklistTagMessage(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guildId" field.</summary>
    public const int GuildIdFieldNumber = 2;
    private ulong guildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlacklistTagMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlacklistTagMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (GuildId != other.GuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (GuildId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(GuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlacklistTagMessage other) {
      if (other == null) {
        return;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 16: {
            GuildId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlacklistTagReply : pb::IMessage<BlacklistTagReply> {
    private static readonly pb::MessageParser<BlacklistTagReply> _parser = new pb::MessageParser<BlacklistTagReply>(() => new BlacklistTagReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlacklistTagReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlacklistTagReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlacklistTagReply(BlacklistTagReply other) : this() {
      isAdded_ = other.isAdded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlacklistTagReply Clone() {
      return new BlacklistTagReply(this);
    }

    /// <summary>Field number for the "isAdded" field.</summary>
    public const int IsAddedFieldNumber = 1;
    private bool isAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAdded {
      get { return isAdded_; }
      set {
        isAdded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlacklistTagReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlacklistTagReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsAdded != other.IsAdded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsAdded != false) hash ^= IsAdded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsAdded != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsAdded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsAdded != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlacklistTagReply other) {
      if (other == null) {
        return;
      }
      if (other.IsAdded != false) {
        IsAdded = other.IsAdded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsAdded = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlacklistedTagsMessage : pb::IMessage<GetBlacklistedTagsMessage> {
    private static readonly pb::MessageParser<GetBlacklistedTagsMessage> _parser = new pb::MessageParser<GetBlacklistedTagsMessage>(() => new GetBlacklistedTagsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlacklistedTagsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlacklistedTagsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlacklistedTagsMessage(GetBlacklistedTagsMessage other) : this() {
      guildId_ = other.guildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlacklistedTagsMessage Clone() {
      return new GetBlacklistedTagsMessage(this);
    }

    /// <summary>Field number for the "guildId" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlacklistedTagsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlacklistedTagsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlacklistedTagsMessage other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlacklistedTagsReply : pb::IMessage<GetBlacklistedTagsReply> {
    private static readonly pb::MessageParser<GetBlacklistedTagsReply> _parser = new pb::MessageParser<GetBlacklistedTagsReply>(() => new GetBlacklistedTagsReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlacklistedTagsReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlacklistedTagsReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlacklistedTagsReply(GetBlacklistedTagsReply other) : this() {
      blacklistedTags_ = other.blacklistedTags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlacklistedTagsReply Clone() {
      return new GetBlacklistedTagsReply(this);
    }

    /// <summary>Field number for the "blacklistedTags" field.</summary>
    public const int BlacklistedTagsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_blacklistedTags_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> blacklistedTags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BlacklistedTags {
      get { return blacklistedTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlacklistedTagsReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlacklistedTagsReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blacklistedTags_.Equals(other.blacklistedTags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blacklistedTags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blacklistedTags_.WriteTo(output, _repeated_blacklistedTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blacklistedTags_.CalculateSize(_repeated_blacklistedTags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlacklistedTagsReply other) {
      if (other == null) {
        return;
      }
      blacklistedTags_.Add(other.blacklistedTags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blacklistedTags_.AddEntriesFrom(input, _repeated_blacklistedTags_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClearCacheRequest : pb::IMessage<ClearCacheRequest> {
    private static readonly pb::MessageParser<ClearCacheRequest> _parser = new pb::MessageParser<ClearCacheRequest>(() => new ClearCacheRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearCacheRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearCacheRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearCacheRequest(ClearCacheRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearCacheRequest Clone() {
      return new ClearCacheRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearCacheRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearCacheRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearCacheRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ClearCacheReply : pb::IMessage<ClearCacheReply> {
    private static readonly pb::MessageParser<ClearCacheReply> _parser = new pb::MessageParser<ClearCacheReply>(() => new ClearCacheReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearCacheReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearCacheReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearCacheReply(ClearCacheReply other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearCacheReply Clone() {
      return new ClearCacheReply(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearCacheReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearCacheReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearCacheReply other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
