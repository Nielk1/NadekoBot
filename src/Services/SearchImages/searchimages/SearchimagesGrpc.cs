// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: searchimages.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Nadeko.Microservices {
  public static partial class SearchImages
  {
    static readonly string __ServiceName = "nadeko.microservices.SearchImages";

    static readonly grpc::Marshaller<global::Nadeko.Microservices.BoobsRequest> __Marshaller_nadeko_microservices_BoobsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.BoobsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.UrlReply> __Marshaller_nadeko_microservices_UrlReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.UrlReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.ButtsRequest> __Marshaller_nadeko_microservices_ButtsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.ButtsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.TagRequest> __Marshaller_nadeko_microservices_TagRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.TagRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.BlacklistTagMessage> __Marshaller_nadeko_microservices_BlacklistTagMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.BlacklistTagMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.BlacklistTagReply> __Marshaller_nadeko_microservices_BlacklistTagReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.BlacklistTagReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.GetBlacklistedTagsMessage> __Marshaller_nadeko_microservices_GetBlacklistedTagsMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.GetBlacklistedTagsMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.GetBlacklistedTagsReply> __Marshaller_nadeko_microservices_GetBlacklistedTagsReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.GetBlacklistedTagsReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.ClearCacheRequest> __Marshaller_nadeko_microservices_ClearCacheRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.ClearCacheRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nadeko.Microservices.ClearCacheReply> __Marshaller_nadeko_microservices_ClearCacheReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nadeko.Microservices.ClearCacheReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Nadeko.Microservices.BoobsRequest, global::Nadeko.Microservices.UrlReply> __Method_Boobs = new grpc::Method<global::Nadeko.Microservices.BoobsRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Boobs",
        __Marshaller_nadeko_microservices_BoobsRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.ButtsRequest, global::Nadeko.Microservices.UrlReply> __Method_Butts = new grpc::Method<global::Nadeko.Microservices.ButtsRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Butts",
        __Marshaller_nadeko_microservices_ButtsRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_Danbooru = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Danbooru",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_Rule34 = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Rule34",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_Yandere = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Yandere",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_Gelbooru = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Gelbooru",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_Hentai = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Hentai",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_SafeBooru = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SafeBooru",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_Konachan = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Konachan",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_DerpiBooru = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DerpiBooru",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply> __Method_E621 = new grpc::Method<global::Nadeko.Microservices.TagRequest, global::Nadeko.Microservices.UrlReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "E621",
        __Marshaller_nadeko_microservices_TagRequest,
        __Marshaller_nadeko_microservices_UrlReply);

    static readonly grpc::Method<global::Nadeko.Microservices.BlacklistTagMessage, global::Nadeko.Microservices.BlacklistTagReply> __Method_ToggleBlacklistTag = new grpc::Method<global::Nadeko.Microservices.BlacklistTagMessage, global::Nadeko.Microservices.BlacklistTagReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ToggleBlacklistTag",
        __Marshaller_nadeko_microservices_BlacklistTagMessage,
        __Marshaller_nadeko_microservices_BlacklistTagReply);

    static readonly grpc::Method<global::Nadeko.Microservices.GetBlacklistedTagsMessage, global::Nadeko.Microservices.GetBlacklistedTagsReply> __Method_GetBlacklsitedTags = new grpc::Method<global::Nadeko.Microservices.GetBlacklistedTagsMessage, global::Nadeko.Microservices.GetBlacklistedTagsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlacklsitedTags",
        __Marshaller_nadeko_microservices_GetBlacklistedTagsMessage,
        __Marshaller_nadeko_microservices_GetBlacklistedTagsReply);

    static readonly grpc::Method<global::Nadeko.Microservices.ClearCacheRequest, global::Nadeko.Microservices.ClearCacheReply> __Method_ClearCache = new grpc::Method<global::Nadeko.Microservices.ClearCacheRequest, global::Nadeko.Microservices.ClearCacheReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClearCache",
        __Marshaller_nadeko_microservices_ClearCacheRequest,
        __Marshaller_nadeko_microservices_ClearCacheReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nadeko.Microservices.SearchimagesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SearchImages</summary>
    public abstract partial class SearchImagesBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Boobs(global::Nadeko.Microservices.BoobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Butts(global::Nadeko.Microservices.ButtsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Danbooru(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Rule34(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Yandere(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Gelbooru(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Hentai(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> SafeBooru(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> Konachan(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> DerpiBooru(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.UrlReply> E621(global::Nadeko.Microservices.TagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.BlacklistTagReply> ToggleBlacklistTag(global::Nadeko.Microservices.BlacklistTagMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.GetBlacklistedTagsReply> GetBlacklsitedTags(global::Nadeko.Microservices.GetBlacklistedTagsMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nadeko.Microservices.ClearCacheReply> ClearCache(global::Nadeko.Microservices.ClearCacheRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SearchImages</summary>
    public partial class SearchImagesClient : grpc::ClientBase<SearchImagesClient>
    {
      /// <summary>Creates a new client for SearchImages</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SearchImagesClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SearchImages that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SearchImagesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SearchImagesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SearchImagesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Nadeko.Microservices.UrlReply Boobs(global::Nadeko.Microservices.BoobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Boobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Boobs(global::Nadeko.Microservices.BoobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Boobs, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> BoobsAsync(global::Nadeko.Microservices.BoobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BoobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> BoobsAsync(global::Nadeko.Microservices.BoobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Boobs, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Butts(global::Nadeko.Microservices.ButtsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Butts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Butts(global::Nadeko.Microservices.ButtsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Butts, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> ButtsAsync(global::Nadeko.Microservices.ButtsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ButtsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> ButtsAsync(global::Nadeko.Microservices.ButtsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Butts, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Danbooru(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Danbooru(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Danbooru(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Danbooru, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> DanbooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DanbooruAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> DanbooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Danbooru, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Rule34(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Rule34(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Rule34(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Rule34, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> Rule34Async(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Rule34Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> Rule34Async(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Rule34, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Yandere(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Yandere(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Yandere(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Yandere, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> YandereAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return YandereAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> YandereAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Yandere, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Gelbooru(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Gelbooru(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Gelbooru(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Gelbooru, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> GelbooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GelbooruAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> GelbooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Gelbooru, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Hentai(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Hentai(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Hentai(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Hentai, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> HentaiAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HentaiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> HentaiAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Hentai, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply SafeBooru(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SafeBooru(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply SafeBooru(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SafeBooru, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> SafeBooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SafeBooruAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> SafeBooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SafeBooru, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply Konachan(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Konachan(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply Konachan(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Konachan, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> KonachanAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KonachanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> KonachanAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Konachan, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply DerpiBooru(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DerpiBooru(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply DerpiBooru(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DerpiBooru, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> DerpiBooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DerpiBooruAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> DerpiBooruAsync(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DerpiBooru, null, options, request);
      }
      public virtual global::Nadeko.Microservices.UrlReply E621(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return E621(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.UrlReply E621(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_E621, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> E621Async(global::Nadeko.Microservices.TagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return E621Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.UrlReply> E621Async(global::Nadeko.Microservices.TagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_E621, null, options, request);
      }
      public virtual global::Nadeko.Microservices.BlacklistTagReply ToggleBlacklistTag(global::Nadeko.Microservices.BlacklistTagMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToggleBlacklistTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.BlacklistTagReply ToggleBlacklistTag(global::Nadeko.Microservices.BlacklistTagMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ToggleBlacklistTag, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.BlacklistTagReply> ToggleBlacklistTagAsync(global::Nadeko.Microservices.BlacklistTagMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToggleBlacklistTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.BlacklistTagReply> ToggleBlacklistTagAsync(global::Nadeko.Microservices.BlacklistTagMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ToggleBlacklistTag, null, options, request);
      }
      public virtual global::Nadeko.Microservices.GetBlacklistedTagsReply GetBlacklsitedTags(global::Nadeko.Microservices.GetBlacklistedTagsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlacklsitedTags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.GetBlacklistedTagsReply GetBlacklsitedTags(global::Nadeko.Microservices.GetBlacklistedTagsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlacklsitedTags, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.GetBlacklistedTagsReply> GetBlacklsitedTagsAsync(global::Nadeko.Microservices.GetBlacklistedTagsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlacklsitedTagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.GetBlacklistedTagsReply> GetBlacklsitedTagsAsync(global::Nadeko.Microservices.GetBlacklistedTagsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlacklsitedTags, null, options, request);
      }
      public virtual global::Nadeko.Microservices.ClearCacheReply ClearCache(global::Nadeko.Microservices.ClearCacheRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearCache(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nadeko.Microservices.ClearCacheReply ClearCache(global::Nadeko.Microservices.ClearCacheRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClearCache, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.ClearCacheReply> ClearCacheAsync(global::Nadeko.Microservices.ClearCacheRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearCacheAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nadeko.Microservices.ClearCacheReply> ClearCacheAsync(global::Nadeko.Microservices.ClearCacheRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClearCache, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SearchImagesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SearchImagesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SearchImagesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Boobs, serviceImpl.Boobs)
          .AddMethod(__Method_Butts, serviceImpl.Butts)
          .AddMethod(__Method_Danbooru, serviceImpl.Danbooru)
          .AddMethod(__Method_Rule34, serviceImpl.Rule34)
          .AddMethod(__Method_Yandere, serviceImpl.Yandere)
          .AddMethod(__Method_Gelbooru, serviceImpl.Gelbooru)
          .AddMethod(__Method_Hentai, serviceImpl.Hentai)
          .AddMethod(__Method_SafeBooru, serviceImpl.SafeBooru)
          .AddMethod(__Method_Konachan, serviceImpl.Konachan)
          .AddMethod(__Method_DerpiBooru, serviceImpl.DerpiBooru)
          .AddMethod(__Method_E621, serviceImpl.E621)
          .AddMethod(__Method_ToggleBlacklistTag, serviceImpl.ToggleBlacklistTag)
          .AddMethod(__Method_GetBlacklsitedTags, serviceImpl.GetBlacklsitedTags)
          .AddMethod(__Method_ClearCache, serviceImpl.ClearCache).Build();
    }

  }
}
#endregion
